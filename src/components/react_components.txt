import React from 'react';
import './App.css';
import Main from './Main';
import Header from './Header';

const App = () => (
  <div>
    <Header />
    <Main />
  </div>
)

export default App;


-----------------------------------------------------


import React from 'react';
import {NavLink } from 'react-router-dom'
import './App.css';

const Header = () => (
  <header>
    <h1>React Routing Application </h1>
    <nav>     
      <ul className="header">
        <li><NavLink to='/' exact activeClassName="active">Home</NavLink></li>
        <li><NavLink to='/counter' activeClassName="active">Counter</NavLink></li>
        <li><NavLink to='/colorizer' activeClassName="active">Colorizer</NavLink></li>
        <li><NavLink to='/todo' activeClassName="active">To Do List</NavLink></li>
        <li><NavLink to='/board' activeClassName="active">Bulletin Board</NavLink></li>
        <li><NavLink to='/cars' activeClassName="active">Cars</NavLink></li>
     </ul>
    </nav>
  </header>
)

export default Header;
--------------------------------------------------------

import React from 'react';
import {NavLink } from 'react-router-dom'
import './App.css'

const Home = () => (
    <div>
        <h2>Welcome!!</h2>
        <h3>Explore these cool components </h3>
        <ul className="homeList">
            <li><NavLink to='/counter'>Counter - Click to increase a counter</NavLink></li>
            <li><NavLink to='/colorizer'>Colorizer - Color a square </NavLink></li>
            <li><NavLink to='/todo'>To Do List - Create a todo list</NavLink></li>
            <li><NavLink to='/board'>Bulletin Board that enables you to add notes to a board</NavLink></li>
        </ul>
    </div>
)

export default Homeimport React from 'react';

--------------------------------------------------------

import { Switch, Route} from 'react-router-dom'
import Home from './Home'
import Colorizer from './colorizer/Colorizer'
import CounterParent from './counter/CounterParent'
import ToDoList from './to-do-list/ToDoList'
import Board from './bulletin-board/Board'
import Cars from './cars-details/Cars'
import CarsDetails from './cars-details/CarsDetails'

const Main = () => (
  <main className="content">
    <Switch>
      <Route exact path='/' component={Home}/>
      <Route exact path='/colorizer' component={Colorizer}/>
      <Route exact path='/counter' component={CounterParent}/>
      <Route exact path='/todo' component={ToDoList}/>
      <Route exact path='/board' component={Board}/>
      <Route exact path='/cars' component={Cars}/>
      <Route path='/cars/:id' component={CarsDetails}/>
    </Switch>
  </main>
)

export default Main;

--------------------------------------------------------

import React from 'react';
import Note from './Note';
import '../App.css';
import './Board.css'

        const Board = React.createClass({
            /*
            propTypes: {
                count: function(props, propName) {
                    if (typeof props[propName] !== 'number') {
                        return new Error("the count must be a number")
                    }
                    if (props[propName] > 100) {
                        return new Error("You are ridiculous")
                    }
                }               
            },
            */
            getInitialState() {
                return {
                    notes : []
                }
            },
            componentWillMount() {
                //if (this.props.count) {
                    var url = `http://baconipsum.com/api/?type=all-meat&sentences=2`
                    fetch(url)
                          .then(results => results.json())
                          .then(array => array[0])
                          .then(text => text.split('. '))
                          .then(array => array.forEach(
                                sentence => this.add(sentence)))
                          .catch(function(err) {
                            console.log("Didn't connect to the API", err)
                          })
                //}
            },
            nextId() {
                this.uniqueId = this.uniqueId || 0
                return this.uniqueId++
            },
            add(text) {
                var notes = [
                    ...this.state.notes,
                    {
                        id : this.nextId(),
                        note: text
                    }        
                ]
                this.setState({notes})
            },
            update(newText, id) {
                var notes = this.state.notes.map(
                        note => (note.id !== id) ? note :
                                                  {
                                                    ...note, 
                                                    note: newText
                                                  }
                        )
                this.setState({notes})
            },
            remove(id) {
                var notes = this.state.notes.filter(note => note.id !== id)
                this.setState({notes})
            },
            eachNote(note) {
               return (<Note key={note.id} 
                             id={note.id}
                             onChange={this.update}
                             onRemove={this.remove}>
                             {note.note}
                       </Note> 
                      )
            },
            render() {
                return (<div className='board'>
                             {this.state.notes.map(this.eachNote)}
                             <button onClick={() => this.add('New Note')}>+</button>
                        </div>
                )
            }
        })


export default Boardimport React from 'react';

-----------------------------------------------------------------------


import '../App.css';
import './Board.css'
import Draggable from 'react-draggable'
  
const Note = React.createClass({
            getInitialState() {
                return {editing: false}
            },
            componentWillMount() {
                this.style = {
                    right: this.randomBetween(0, window.innerWidth - 150, 'px'),
                    top: this.randomBetween(180, window.innerHeight -150, 'px')
                }
            },
            componentDidUpdate() {
                if (this.state.editing) {
                    this.textarea.focus()
                    this.textarea.select()
                }
            },
            shouldComponentUpdate(nextProps, nextState) {
                return this.props.children !== nextProps.children || this.state !== nextState
            },
            randomBetween(x, y, s) {
                return (x + Math.ceil(Math.random() * (y-x))) + s
            },

            edit() {
                this.setState({editing: true})
            },
            save() {
                //<textarea ref="newText"></textarea>
                //var val = this.refs.newText.value;
                var val = this.textarea.value;
                //alert('Later we will save this value ' + val);
                this.props.onChange(val, this.props.id)
                this.setState({editing: false}) 
            },
            remove() {
                //alert("Removing Note")
                this.props.onRemove(this.props.id)
            },
            renderForm() {
                return (
                        <div className="note"                           
                            style={this.style}>
                        <textarea ref={(a) => this.textarea = a} 
                                  defaultValue={this.props.children}></textarea>
                        <button onClick={this.save}>SAVE</button>
                        </div>
                        )
            },
            renderDisplay() {
                return ( 
                    <div className="note" style={this.style}>
                        <p>{this.props.children}</p>
                        <span>
                          <button onClick={this.edit}>EDIT</button>
                          <button onClick={this.remove}>X</button>
                        </span>
                    </div>
                    )                
            },
            render() {
               return ( <Draggable>
                       {(this.state.editing) ? this.renderForm()
                                          : this.renderDisplay()}
                       </Draggable>
                )
            }
        })
        
export default Note

-----------------------------------------------------------------

import React from 'react';
import { NavLink} from 'react-router-dom'
import CarsAPI from './CarsAPI'
import './Cars.css'

const Cars = () => (
  <div className='pure-menu'>
   <div className="list-group">
    <ul>
      {
        CarsAPI.all().map(p => (
          <li key={p.id}>
            <NavLink to={`/cars/${p.id}`}>{p.name}</NavLink>
          </li>
        ))
      }
    </ul>
   </div>
  </div>
)

export default Cars

-------------------------------------------------------------------

const CarAPI = {
  cars:  [
      {
          "id": 1,
          "name": "Honda Accord Crosstour",
          "year": "2010",
          "model": "Accord Crosstour",
          "make": "Honda",
          "media": "http://media.ed.edmunds-media.com/honda/accord-crosstour/2010/oem/2010_honda_accord-crosstour_4dr-hatchback_ex-l_fq_oem_4_500.jpg",
          "price": "$16,811"
    },
    {
        "id": 2,
        "name": "Mercedes-Benz AMG GT Coupe",
        "year": "2016",
        "model": "AMG",
        "make": "Mercedes Benz",
        "media": "http://media.ed.edmunds-media.com/mercedes-benz/amg-gt/2016/oem/2016_mercedes-benz_amg-gt_coupe_s_fq_oem_1_717.jpg",
        "price": "$138,157"
    },
    {
        "id": 3,
        "name": "BMW X6 SUV",
        "year": "2016",
        "model": "X6",
        "make": "BMW",
        "media": "http://media.ed.edmunds-media.com/bmw/x6/2016/oem/2016_bmw_x6_4dr-suv_xdrive50i_fq_oem_1_717.jpg",
        "price": "$68,999"
    },
    {
        "id": 4,
        "name": "Ford Edge SUV",
        "year": "2016",
        "model": "Edge",
        "make": "Ford",
        "media": "http://media.ed.edmunds-media.com/ford/edge/2016/oem/2016_ford_edge_4dr-suv_sport_fq_oem_6_717.jpg",
        "price": "$36,275"
    },
    {
        "id": 5,
        "name": "Dodge Viper Coupe",
        "year": "2017",
        "model": "Viper",
        "make": "Dodge",
        "media": "http://media.ed.edmunds-media.com/dodge/viper/2017/oem/2017_dodge_viper_coupe_acr_fq_oem_3_717.jpg",
        "price": "$123,890"
    }
  ],
  all: function() { return this.cars},
  get: function(id) {
    const isCar = p => p.id === id
    return this.cars.find(isCar)
  }
}
/*
const PlayerAPI = {
  players: [
    { number: 1, name: "Ben Blocker", position: "G" },
    { number: 2, name: "Dave Defender", position: "D" },
    { number: 3, name: "Sam Sweeper", position: "D" },
    { number: 4, name: "Matt Midfielder", position: "M" },
    { number: 5, name: "William Winger", position: "M" },
    { number: 6, name: "Fillipe Forward", position: "F" }
  ],
  all: function() { return this.players},
  get: function(id) {
    const isPlayer = p => p.number === id
    return this.players.find(isPlayer)
  }
}
*/
export default CarAPIimport React from 'react';

---------------------------------------------------------------------

import { NavLink} from 'react-router-dom'
import CarsAPI from './CarsAPI'

const CarsDetails = (props) => {
  const car = CarsAPI.get(
    parseInt(props.match.params.id, 10)
  )
  if (!car) {
    return <div>Sorry, but the car was not found</div>
  }
  
  
  return (
        <div>
            <h2>{car.name}</h2>
            <div className="row">
                <div className="col-sm-6 col-md-4">
                    <div className="thumbnail">
                        <img src={car.media} alt={car.name} />
                    </div>
                </div>
                <div className="col-sm-6 col-md-4">
                   <ul>
                       <li><strong>Model</strong>: {car.model}</li>
                       <li><strong>Make</strong>: {car.make}</li>
                       <li><strong>Year</strong>: {car.year}</li>
                       <li><strong>Price</strong>: {car.price}</li>
                   </ul>
                </div>
            </div>
            
            
            <NavLink className="button" to='/cars'>Back To Cars</NavLink>
        </div>
  )
}

export default CarsDetails

---------------------------------------------------------------------------

/* Colorizer styling */
    #container {
      padding: 50px;
    }
    .colorSquare {
      box-shadow: 0px 0px 25px 0px #333;
      width: 242px;
      height: 242px;
      margin-bottom: 15px;
    }
    .colorArea input {
      padding: 10px;
      font-size: 16px;
      border: 2px solid #CCC;
    }
    .colorArea button {
      padding: 10px;
      font-size: 16px;
      margin: 10px;
      background-color: #666;
      color: #FFF;
      border: 2px solid #666;
    }
    .colorArea button:hover {
      background-color: #111;
      border-color: #111;
      cursor: pointer;
    }
    import React from 'react';
import '../App.css';
import './Colorizer.css'

var Colorizer = React.createClass({
        getInitialState: function() {
          return {
              color: '',
              bgColor: ''
          }
        },
        colorValue: function(e) {
          this.setState({color: e.target.value});
        },
        setNewColor: function(e){
          this.setState({bgColor: this.state.color});

          this._input.value = "";
          this._input.focus();

          e.preventDefault();
        },
        render: function() {
          var squareStyle = {
            backgroundColor: this.state.bgColor
          };

          return (
            <div className="colorArea">
              <div style={squareStyle} className="colorSquare"></div>

              <form onSubmit={this.setNewColor}>
                <input
                    ref={
                            (el) => this._input = el
                        }
                    onChange={this.colorValue}
                    placeholder="Enter a color value">
                </input>
                <button type="submit">go</button>
              </form>
            </div>
          );
        }
    });

export default Colorizer/* Colorizer styling */
    #container {
      padding: 50px;
    }
    .colorSquare {
      box-shadow: 0px 0px 25px 0px #333;
      width: 242px;
      height: 242px;
      margin-bottom: 15px;
    }
    .colorArea input {
      padding: 10px;
      font-size: 16px;
      border: 2px solid #CCC;
    }
    .colorArea button {
      padding: 10px;
      font-size: 16px;
      margin: 10px;
      background-color: #666;
      color: #FFF;
      border: 2px solid #666;
    }
    .colorArea button:hover {
      background-color: #111;
      border-color: #111;
      cursor: pointer;
    }

---------------------------------------------------------------
    import React from 'react';
import '../App.css';
import './Colorizer.css'

var Colorizer = React.createClass({
        getInitialState: function() {
          return {
              color: '',
              bgColor: ''
          }
        },
        colorValue: function(e) {
          this.setState({color: e.target.value});
        },
        setNewColor: function(e){
          this.setState({bgColor: this.state.color});

          this._input.value = "";
          this._input.focus();

          e.preventDefault();
        },
        render: function() {
          var squareStyle = {
            backgroundColor: this.state.bgColor
          };

          return (
            <div className="colorArea">
              <div style={squareStyle} className="colorSquare"></div>

              <form onSubmit={this.setNewColor}>
                <input
                    ref={
                            (el) => this._input = el
                        }
                    onChange={this.colorValue}
                    placeholder="Enter a color value">
                </input>
                <button type="submit">go</button>
              </form>
            </div>
          );
        }
    });

export default Colorizer/* Colorizer styling */
    #container {
      padding: 50px;
    }
    .colorSquare {
      box-shadow: 0px 0px 25px 0px #333;
      wid

--------------------------------------------------------------------------

import React from 'react';

const Counter = () => ({
      render: function() {
          var textStyle = {
            fontSize: 72,
            fontFamily: "sans-serif",
            color: "#333",
            fontWeight: "bold"
          };

          return (
            <div style={textStyle}>
              {this.props.display}
            </div>
          );
        }
    });

export default Counter

--------------------------------------------------------------------------

import React from 'react';
import '../App.css';
import Counter from './Counter'

const CounterParent = React.createClass({
        getInitialState: function() {
            return {
              count: 0
            };
        },
        increase: function(e) {
          var currentCount = this.state.count;

          if (e.shiftKey) {
            currentCount += 10;
          } else {
            currentCount += 1;
          }

          this.setState({
            count: currentCount
          });
        },  
        render: function() {
          var backgroundStyle = {
            padding: 50,
            backgroundColor: "#FFC53A",
            width: 250,
            height: 100,
            borderRadius: 10,
            textAlign: "center"
          };

          var buttonStyle = {
            fontSize: "1em",
            width: 30,
            height: 30,
            fontFamily: "sans-serif",
            color: "#333",
            fontWeight: "bold",
            lineHeight: "3px"
          };

          return (
            <div style={backgroundStyle}>
              <Counter display={this.state.count}/>
              <button onClick={this.increase} style={buttonStyle}>+</button>
             </div>
          );
        }
    });

export default CounterParent

--------------------------------------------------------------------

import React from 'react';
import '../App.css';
import './ToDoList.css'

const ToDoItems = () => ({
      render: function() {
        var todoEntries = this.props.entries;

        function createTasks(item) {
          return <li key={item.key}>{item.text}</li>
        }

        var listItems = todoEntries.map(createTasks);
        
        return (
          <ul className="theList">
            {listItems}
          </ul>
        );        
      }
    });

export default ToDoItems;
-----------------------------------------------------------------

/* To Do List styling */

    .todoListBody {
      padding: 50px;
      background-color: #66CCFF;
      font-family: sans-serif;
    }
    
    .todoListMain .header input {
      padding: 10px;
      font-size: 16px;
      border: 2px solid #FFF;
    }
    .todoListMain .header button {
      padding: 10px;
      font-size: 16px;
      margin: 10px;
      background-color: #0066FF;
      color: #FFF;
      border: 2px solid #0066FF;
    }

    .todoListMain .header button:hover {
      background-color: #003399;
      border: 2px solid #003399;
      cursor: pointer;
    }

    ul.theList {
      list-style: none;
      padding-left: 0;
      width: 255px;
    }

    ul.theList li {
      color: #333;
      background-color: rgba(255,255,255,.5);
      padding: 15px;
      margin-bottom: 15px;
      border-radius: 5px;
    }

-------------------------------------------------------------

import React from 'react';
import TodoItems from './ToDoItems'
import '../App.css';
import './ToDoList.css'
 
const ToDoList = React.createClass({
      getInitialState: function() {
        return {
          tasks: []
        };
      },
      addItem: function(e) {
          var itemArray = this.state.tasks;

          itemArray.push(
            {
              text: this._inputElement.value,
              key: Date.now()
            }
          );

          this.setState({
            tasks: itemArray
          });

          this._inputElement.value = "";
          
          e.preventDefault();
      },
      render: function() {
          return (
            <div className="todoListBody">
            <div className="todoListMain">
              <div className="header">
                <form onSubmit={this.addItem}>
                  <input ref={(a) => this._inputElement = a} placeholder="Enter task">
                  </input>
                  <button type="submit">add</button>
                </form>
              </div>
            </div>
            <TodoItems entries={this.state.tasks}/>
            </div>
          );
        }
    });

export default ToDoList
